<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>